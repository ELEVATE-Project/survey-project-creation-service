version: '3'
services:
  zookeeper:
    image: 'confluentinc/cp-zookeeper:7.3.0'
    ports:
      - '2181:2181'
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
      - ZOOKEEPER_CLIENT_PORT=2181
      - ZOOKEEPER_TICK_TIME=2000
    networks:
      - elevate_net
    logging:
      driver: none
  kafka:
    image: 'confluentinc/cp-kafka:7.3.0'
    ports:
      - '9092:9092'
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    depends_on:
      - zookeeper
    networks:
      - elevate_net
    logging:
      driver: gelf
      options:
        gelf-address: 'udp://0.0.0.0:12201'
        tag: 'kafka-logs'
  mongo:
    image: 'mongo:4.1.4'
    restart: 'always'
    command:
      - '--logpath'
      - '/var/log/mongodb/mongod.log'
    ports:
      - '27017:27017'
    networks:
      - elevate_net
    volumes:
      - mongo-data:/data/db
      - logs:/var/log/mongodb
  redis:
    image: 'redis:7.0.0'
    restart: 'always'
    expose:
      - '6379'
    networks:
      - elevate_net
    # depends_on:
    #   - graylog
    logging:
      driver: gelf
      options:
        gelf-address: 'udp://0.0.0.0:12201'
        tag: 'redis-logs'
  mentoring:
    image: shikshalokamqa/elevate-mentoring:2.4
    ports:
      - '3000:3000'
    command: ['nodemon', 'app.js']
    environment:
      - MONGODB_URL=mongodb://mongo:27017/elevate-mentoring
      - KAFKA_URL=kafka:9092
      - USER_SERIVCE_HOST=http://user:3001
      - REDIS_HOST=redis://redis:6379
    depends_on:
      - kafka
      - mongo
      - redis
    networks:
      - elevate_net
    env_file:
      - ${mentoring_env}
  user:
    image: shikshalokamqa/elevate-user:2.4
    ports:
      - '3001:3001'
    command: ['nodemon', 'app.js']
    environment:
      - MONGODB_URL=mongodb://mongo:27017/elevate-user
      - KAFKA_URL=kafka:9092
      - REDIS_HOST=redis://redis:6379
    depends_on:
      - kafka
      - mongo
      - redis
    networks:
      - elevate_net
    env_file:
      - ${users_env}
  notification:
    image: shikshalokamqa/elevate-notification:2.4
    ports:
      - '3002:3002'
    command: ['nodemon', 'app.js']
    environment:
      - KAFKA_HOST=kafka:9092
    depends_on:
      - kafka
    networks:
      - elevate_net
    env_file:
      - ${notification_env}

  scheduler:
    image: shikshalokamqa/elevate-scheduler:2.4
    ports:
      - '4000:4000'
    command: ['nodemon', 'app.js']
    environment:
      - KAFKA_URL=kafka:9092
      - MONGODB_URL=mongodb://mongo:27017/elevate-scheduler
    env_file:
      - ${scheduler_env}
    depends_on:
      - kafka
      - mongo
    networks:
      - elevate_net

  #The below services can be disable safely. Only enable if graylog service is needed.
  # elasticsearch:
  #   image: 'docker.elastic.co/elasticsearch/elasticsearch-oss:7.10.2'
  #   environment:
  #     - http.host=0.0.0.0
  #     - transport.host=localhost
  #     - network.host=0.0.0.0
  #     - ES_JAVA_OPTS=-Dlog4j2.formatMsgNoLookups=true -Xms512m -Xmx512m
  #   ulimits:
  #     memlock:
  #       soft: -1
  #       hard: -1
  #   deploy:
  #     resources:
  #       limits:
  #         memory: 1g
  #   networks:
  #     - elevate_net
  # graylog:
  #   image: 'graylog/graylog:5.0'
  #   environment:
  #     - GRAYLOG_PASSWORD_SECRET=somepasswordpepper
  #     - >-
  #       GRAYLOG_ROOT_PASSWORD_SHA2=8c6976e5b5410415bde908bd4dee15dfb167a9c873fc4bb8a81f6f2ab448a918
  #     - 'GRAYLOG_HTTP_EXTERNAL_URI=http://127.0.0.1:9000/'
  #   entrypoint: '/usr/bin/tini -- wait-for-it elasticsearch:9200 --  /docker-entrypoint.sh'
  #   networks:
  #     - elevate_net
  #   restart: always
  #   depends_on:
  #     - mongo
  #     - elasticsearch
  #   ports:
  #     # Graylog web interface and REST API
  #     - 9000:9000
  #     #filebeat
  #     - 5044:5044
  #     # GELF TCP
  #     - 12201:12201
  #     # GELF UDP
  #     - 12201:12201/udp
  # filebeat:
  #   container_name: filebeat
  #   hostname: filebeat
  #   user: root
  #   image: docker.elastic.co/beats/filebeat:8.5.3
  #   volumes:
  #     #Mount the filebeat configuration so users can make edit
  #     - ./filebeat.yml:/usr/share/filebeat/filebeat.yml
  #     #Named volume fsdata. This is used to persist the registry file between restarts, so to avoid data duplication
  #     - fbdata:/usr/share/filebeat/data/
  #     - logs:/info/logs

  #    - type: bind
  #      source: ../user/src/user.log
  #      target: /usr/share/filebeat/user.log
  #      read_only: true
  #    - type: bind
  #      source: ../notification/src/notification.log
  #      target: /usr/share/filebeat/notification.log
  #      read_only: true
  #    - type: bind
  #      source: ./src/mentoring.log
  #      target: /usr/share/filebeat/mentoring.log
  #      read_only: true
  #    - type: bind
  #      source: ../scheduler/src/scheduler.log
  #      target: /usr/share/filebeat/scheduler.log
  #      read_only: true
  #  command: filebeat -strict.perms=false
  #  restart: on-failure
  #  networks:
  #    - elevate_net
  #  depends_on:
  #    - mongo
  #    - elasticsearch
  #    - mentoring
  #    - user
networks:
  elevate_net:
    external: false
volumes:
  zookeeper-data:
  kafka-data:
  mongo-data:
  fbdata:
  logs:
