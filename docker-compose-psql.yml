version: '3'
services:
  zookeeper:
    image: 'bitnami/zookeeper:3.8.0'
    ports:
      - '2181:2181'
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
    networks:
      - elevate_net
    volumes:
      - zookeeper-data:/bitnami/zookeeper
    logging:
      driver: none
  kafka:
    image: 'bitnami/kafka:3.1.0'
    ports:
      - '9092:9092'
    environment:
      - KAFKA_BROKER_ID=1
      - KAFKA_CFG_LISTENERS=CLIENT://:9092,EXTERNAL://:9093
      - KAFKA_CFG_ADVERTISED_LISTENERS=CLIENT://kafka:9092,EXTERNAL://localhost:9093
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CLIENT:PLAINTEXT,EXTERNAL:PLAINTEXT
      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=CLIENT
    depends_on:
      - zookeeper
    networks:
      - elevate_net
    volumes:
      - kafka-data:/bitnami/kafka
    logging:
      driver: none

  redis:
    image: 'redis:7.0.0'
    restart: 'always'
    ports:
      - '6379:6379'
    networks:
      - elevate_net
    logging:
      driver: none

  postgres:
    image: 'postgres:latest'
    ports:
      - '5432:5432'
    environment:
      - POSTGRES_DB=self_creation_portal
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    networks:
      - elevate_net
    volumes:
      - postgres-data:/var/lib/postgresql/data
    logging:
      driver: none

  pgadmin:
    image: dpage/pgadmin4
    container_name: elevate-pgadmin
    restart: always
    ports:
      - '5500:80'
    environment:
      - PGADMIN_DEFAULT_EMAIL=user@shikshalokam.org
      - PGADMIN_DEFAULT_PASSWORD=password
    networks:
      - elevate_net
    logging:
      driver: none

  user:
    image: shikshalokamqa/elevate-user:2.5.5
    ports:
      - '3001:3001'
    command: >
      bash -c "echo 'Waiting for PostgreSQL on citus_master:5432 to accept connections...' &&
      while ! timeout 1 bash -c 'cat < /dev/null > /dev/tcp/citus_master/5432' 2> /dev/null; do
        echo 'Waiting for citus_master to be ready...';
        sleep 1;
      done;
      echo 'Database is ready.';
      npm run db:init && npm run db:seed:all &&
      (echo 'Running nodeee' && nodemon app.js &) &&
      (while ! curl -sSf http://user:3001 > /dev/null; do
        sleep 1;
      done && echo 'Service is up' &&
      /bin/bash -c 'cd scripts && echo Running user service scripts && node insertDefaultOrg.js && node viewsScript.js && node -r module-alias/register uploadSampleCSV.js');
      tail -f /dev/null"
    depends_on:
      - kafka
      - citus
      - redis
    environment:
      - DEV_DATABASE_URL=postgres://postgres:postgres@citus_master:5432/user
      - KAFKA_URL=kafka:9092
      - REDIS_HOST=redis://redis:6379
    networks:
      - elevate_net
    env_file:
      - dev-ops/integration_test.user.env

  citus:
    image: citusdata/citus:11.2.0
    container_name: 'citus_master'
    #ports:
    #  - 5432:5432
    expose:
      - 5432
    environment: &AUTH
      POSTGRES_USER: '${POSTGRES_USER:-postgres}'
      POSTGRES_PASSWORD: '${POSTGRES_PASSWORD:-postgres}'
      PGUSER: '${POSTGRES_USER:-postgres}'
      PGPASSWORD: '${POSTGRES_PASSWORD:-postgres}'
      POSTGRES_DB: 'postgres'
      POSTGRES_HOST_AUTH_METHOD: '${POSTGRES_HOST_AUTH_METHOD:-trust}'
      POSTGRES_LOG_STATEMENT: 'all' # Enable query logging (set to 'all' for all queries)
    networks:
      - elevate_net
    #volumes:
    #  - citus-data:/var/lib/postgresql/data

  survey-project-creation-service:
    build: '../survey-project-creation-service/'
    image: elevate/survey-project-creation-service:1.0
    volumes:
      - ../survey-project-creation-service/src/:/var/src
    ports:
      - '3006:3006'
    command: ['nodemon', 'app.js']

    environment:
      - POSTGRES_URL=postgres://postgres:postgres@citus_master:5432/self_creation_portal
      - KAFKA_URL=kafka:9092
      - REDIS_HOST=redis://redis:6379
    depends_on:
      - kafka
      - user
      - postgres
      - redis
    networks:
      - elevate_net
    env_file:
      - dev-ops/integration_test.self_creation_portal.env

networks:
  elevate_net:
    external: false
volumes:
  zookeeper-data:
  kafka-data:
  postgres-data:
  redis_data:
  healthcheck-volume:
